name: Iron MCB API Tests

on:
  schedule:
    # Runs every day at 08:00 UTC (after reqres tests)
    - cron: '0 8 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Iron environment to test'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
  push:
    branches: [ "main" ]
    paths:
      - 'tests/iron/**'
      - 'src/**'
      - '.github/workflows/iron-tests.yml'

jobs:
  iron-security:
    name: Iron MCB Security Tests
    runs-on: ubuntu-latest
    env:
      TEST_ENV: iron
      IRON_ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}
      API_TOKEN: ${{ secrets.IRON_API_TOKEN }}
      IRON_CLIENT_ID: ${{ secrets.IRON_CLIENT_ID }}
      IRON_CLIENT_SECRET: ${{ secrets.IRON_CLIENT_SECRET }}
      IRON_TEST_CUSTOMER_ID: ${{ secrets.IRON_TEST_CUSTOMER_ID }}
      IRON_TEST_ACCOUNT_ID: ${{ secrets.IRON_TEST_ACCOUNT_ID }}
      API_RETRY_MAX: ${{ vars.API_RETRY_MAX || 3 }}
      API_RETRY_BASE_MS: ${{ vars.API_RETRY_BASE_MS || 500 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Iron security tests
        run: npx playwright test tests/iron/security.spec.ts

      - name: Upload security test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iron-security-report
          path: reports/html
          if-no-files-found: ignore

  iron-functional:
    name: Iron MCB Functional Tests
    runs-on: ubuntu-latest
    needs: iron-security
    env:
      TEST_ENV: iron
      IRON_ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}
      API_TOKEN: ${{ secrets.IRON_API_TOKEN }}
      IRON_CLIENT_ID: ${{ secrets.IRON_CLIENT_ID }}
      IRON_CLIENT_SECRET: ${{ secrets.IRON_CLIENT_SECRET }}
      IRON_TEST_CUSTOMER_ID: ${{ secrets.IRON_TEST_CUSTOMER_ID }}
      IRON_TEST_ACCOUNT_ID: ${{ secrets.IRON_TEST_ACCOUNT_ID }}
      API_RETRY_MAX: ${{ vars.API_RETRY_MAX || 3 }}
      API_RETRY_BASE_MS: ${{ vars.API_RETRY_BASE_MS || 500 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Iron functional tests
        run: npx playwright test tests/iron/accounts.spec.ts tests/iron/transactions.spec.ts

      - name: Upload functional test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iron-functional-report
          path: reports/html
          if-no-files-found: ignore

  iron-performance:
    name: Iron MCB Performance Tests
    runs-on: ubuntu-latest
    needs: iron-functional
    env:
      TEST_ENV: iron
      IRON_ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}
      API_TOKEN: ${{ secrets.IRON_API_TOKEN }}
      IRON_CLIENT_ID: ${{ secrets.IRON_CLIENT_ID }}
      IRON_CLIENT_SECRET: ${{ secrets.IRON_CLIENT_SECRET }}
      IRON_TEST_CUSTOMER_ID: ${{ secrets.IRON_TEST_CUSTOMER_ID }}
      IRON_TEST_ACCOUNT_ID: ${{ secrets.IRON_TEST_ACCOUNT_ID }}
      API_RETRY_MAX: ${{ vars.API_RETRY_MAX || 3 }}
      API_RETRY_BASE_MS: ${{ vars.API_RETRY_BASE_MS || 500 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Iron performance tests
        run: npx playwright test tests/iron/ -g "Performance"

      - name: Upload performance test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iron-performance-report
          path: reports/html
          if-no-files-found: ignore

  iron-comprehensive:
    name: Iron MCB Comprehensive Tests
    runs-on: ubuntu-latest
    needs: [iron-security, iron-functional, iron-performance]
    if: always()
    env:
      TEST_ENV: iron
      IRON_ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}
      API_TOKEN: ${{ secrets.IRON_API_TOKEN }}
      IRON_CLIENT_ID: ${{ secrets.IRON_CLIENT_ID }}
      IRON_CLIENT_SECRET: ${{ secrets.IRON_CLIENT_SECRET }}
      IRON_TEST_CUSTOMER_ID: ${{ secrets.IRON_TEST_CUSTOMER_ID }}
      IRON_TEST_ACCOUNT_ID: ${{ secrets.IRON_TEST_ACCOUNT_ID }}
      API_RETRY_MAX: ${{ vars.API_RETRY_MAX || 3 }}
      API_RETRY_BASE_MS: ${{ vars.API_RETRY_BASE_MS || 500 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Iron comprehensive test suite
        run: npx playwright test tests/iron/

      - name: Upload comprehensive test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iron-comprehensive-report
          path: reports/html
          if-no-files-found: ignore

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: iron-test-results
          path: test-results
          if-no-files-found: ignore
